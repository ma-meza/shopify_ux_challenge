{"version":3,"sources":["App.js","reportWebVitals.js","index.js","assets/styles.module.css"],"names":["App","props","state","titleSearchInput","searchResults","nominationsList","searchResultErrorMessage","handleInputChange","bind","nominateMovie","unNominateMovie","isNominated","updateLocalStorage","clearLocalStorage","queryParams","URLSearchParams","window","location","search","get","length","movieIdArray","split","linkNominations","axiosRequestList","i","push","axios","all","then","spread","responses","j","data","Response","setState","Storage","localStorage","movieNominations","this","JSON","parse","e","target","name","value","res","console","log","Search","Error","catch","err","alert","setItem","stringify","removeItem","movie","id","imdbID","nominations","splice","movieId","shareMyList","map","key","Title","Year","className","styles","disabledButton","button","onClick","substring","onChange","type","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.593aac4b.chunk.js","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport axios from \"axios\";\nimport styles from \"./assets/styles.module.css\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      titleSearchInput:\"\",\n      searchResults:[],\n      nominationsList:[],\n      searchResultErrorMessage:\"\"\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.nominateMovie = this.nominateMovie.bind(this);\n    this.unNominateMovie = this.unNominateMovie.bind(this);\n    this.isNominated = this.isNominated.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n    this.clearLocalStorage = this.clearLocalStorage.bind(this);\n  }\n  componentDidMount(){\n    let queryParams = new URLSearchParams(window.location.search).get('nomi');\n    if(queryParams && queryParams.length>0){\n      let movieIdArray = queryParams.split(\"$$\");\n      let linkNominations = [];\n      let axiosRequestList = [];\n      for(let i=0;i<movieIdArray.length;i++){\n        axiosRequestList.push(axios.get(\"http://www.omdbapi.com/?apikey=82ab90b1&i=\"+movieIdArray[i]));\n      }\n      axios.all(axiosRequestList).then(axios.spread((...responses)=>{\n        for(let j=0;j<responses.length;j++){\n          if(responses[j].data.Response === \"True\"){\n            //has a response with movie result\n            linkNominations.push(responses[j].data);\n          }\n        }\n        if(linkNominations.length>0){\n          this.setState({\n            nominationsList:linkNominations\n          });\n        }\n      }));\n    }else{\n      if (typeof(Storage) !== \"undefined\" && localStorage.movieNominations) {\n        this.setState({\n          nominationsList:JSON.parse(localStorage.movieNominations)\n        });\n      }\n    }\n  }\n  handleInputChange(e){\n    const {name, value} = e.target;\n    if(name===\"titleSearchInput\"){\n      axios.get(\"http://www.omdbapi.com/?apikey=82ab90b1&s=\"+value+\"&type=movie\").then((res)=>{\n        if(res.data.Response === \"True\"){\n          //has a response with movie result\n          console.log(res.data.Search);\n          this.setState({\n            searchResults:res.data.Search\n          });\n        }else{\n          this.setState({\n            searchResultErrorMessage:res.data.Error\n          });\n        }\n      }).catch((err)=>{\n        if(err){\n          alert(\"title_search_error\");\n        }\n      });\n    }\n\n    this.setState({\n      [name]:value\n    });\n  }\n\n  updateLocalStorage(){\n    if (typeof(Storage) !== \"undefined\") {\n      localStorage.setItem(\"movieNominations\", JSON.stringify(this.state.nominationsList));\n    }\n  }\n  clearLocalStorage(){\n    if (typeof(Storage) !== \"undefined\") {\n      localStorage.removeItem(\"movieNominations\");\n    }\n  }\n\n  nominateMovie(movie){\n    let id = movie.imdbID;\n    let nominations = this.state.nominationsList;\n    for(let i=0;i<nominations.length;i++){\n      if(nominations[i].imdbID === id){\n        return;\n      }\n    }\n    if(this.state.nominationsList.length<=4){\n      nominations.push(movie);\n      this.setState({\n        nominationsList:nominations\n      }, ()=>{this.updateLocalStorage()});\n    }\n  }\n  unNominateMovie(movie){\n    let id = movie.imdbID;\n    let nominations = this.state.nominationsList;\n    for(let i=0;i<nominations.length;i++){\n      if(nominations[i].imdbID === id){\n        nominations.splice(i,1);\n        this.setState({\n          nominationsList:nominations\n        }, ()=>{this.updateLocalStorage()});\n        return;\n      }\n    }\n  }\n\n  isNominated(movieId){\n    for(let i=0;i<this.state.nominationsList.length;i++){\n      if(this.state.nominationsList[i].imdbID === movieId){\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n\n  render(){\n    let searchResults;\n    if(this.state.searchResults.length>0){\n      searchResults = this.state.searchResults.map((value, key)=>{\n        return (\n          <div key={key}>\n            <p>{value.Title} ({value.Year})</p>\n            {this.isNominated(value.imdbID)?<button className={styles.disabledButton}>Nominate</button>:<button className={styles.button} onClick={()=>{this.nominateMovie(value)}}>Nominate</button>}\n          </div>\n        );\n      });\n    }else if(this.state.searchResultErrorMessage.length>0){\n      searchResults = <p>{this.state.searchResultErrorMessage}</p>\n    }else{\n      searchResults = <p>Enter a movie title to get some results.</p>\n    }\n\n\n\n    let nominationsList;\n    let shareMyList;\n    if(this.state.nominationsList.length>0){\n      shareMyList = \"https://marque2.github.io/shopify_ux_challenge?nomi=\";\n      nominationsList = this.state.nominationsList.map((value, key)=>{\n        shareMyList+=value.imdbID+\"$$\";\n        return (\n          <div key={key}>\n            <p>Nomination: {value.Title}</p><button className={styles.button} onClick={()=>{this.unNominateMovie(value)}}>Remove</button>\n          </div>\n        );\n      });\n      shareMyList = shareMyList.substring(0, shareMyList.length-2);\n    }else{\n      nominationsList = <p>Add nominations!!</p>\n    }\n    return (\n      <div className=\"App\">\n      {this.state.nominationsList.length===5?<div><p>Your nomination list is full!</p></div>:null}\n        <div>\n          <input onChange={this.handleInputChange} type=\"text\" name=\"titleSearchInput\" value={this.state.titleSearchInput} placeholder=\"movie title\"></input>\n        </div>\n        <div>\n          {searchResults}\n        </div>\n        <div>\n          {nominationsList}\n        </div>\n        {shareMyList}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabledButton\":\"styles_disabledButton__GUcf1\",\"button\":\"styles_button__3gdzL\"};"],"sourceRoot":""}