{"version":3,"sources":["assets/styles.module.css","assets/snackBar.module.css","assets/search.svg","assets/trash.svg","assets/share-android.svg","assets/copy.svg","assets/x.svg","snackBar.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Snackbar","message","state","isActive","openSnackBar","setState","setTimeout","this","className","styles","snackbar","show","PureComponent","App","props","titleSearchInput","searchResults","nominationsList","searchResultErrorMessage","shareLinkIsActive","handleInputChange","bind","nominateMovie","unNominateMovie","isNominated","updateLocalStorage","clearLocalStorage","handleShareLinkModalClick","copyLink","inputRef","React","createRef","inputDivRef","snackBarRef","shareLinkContainerRef","shareLinkInputRef","closeModalButtonRef","queryParams","URLSearchParams","window","location","search","get","length","movieIdArray","split","linkNominations","axiosRequestList","i","push","axios","all","then","spread","responses","j","data","Response","Storage","localStorage","movieNominations","JSON","parse","current","onfocus","classList","add","focusedDiv","onblur","remove","e","target","name","value","res","Search","Error","catch","err","setItem","stringify","removeItem","movie","id","imdbID","nominations","splice","movieId","input","select","setSelectionRange","document","execCommand","getSelection","removeAllRanges","shareMyList","shareLinkPopup","map","key","movieCard","movieCardPoster","style","backgroundImage","Poster","regularText","Title","Year","disabledButton","button","onClick","middleText","nominationCardPoster","removeNominationButton","src","trashIcon","substring","ref","shareLinkContainer","modal","xIcon","closeButton","blackTitle2","shareLinkInputDiv","copyIcon","type","topBanner","contentBody","title1","shareIcon","inputDiv","searchIcon","searchInput","onChange","placeholder","searchResultsMainContainer","nominationsMainContainer","title2","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64b24d60.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabledButton\":\"styles_disabledButton__GUcf1\",\"button\":\"styles_button__3gdzL\",\"inputDiv\":\"styles_inputDiv__35jMn\",\"shareIcon\":\"styles_shareIcon__1ELqT\",\"searchInput\":\"styles_searchInput__1fdmR\",\"focusedDiv\":\"styles_focusedDiv__1AGV7\",\"title1\":\"styles_title1__1h9HJ\",\"title2\":\"styles_title2__1ZC_Q\",\"regularText\":\"styles_regularText__3k7jA\",\"topBanner\":\"styles_topBanner__3CbS0\",\"nominationsMainContainer\":\"styles_nominationsMainContainer__2hn4b\",\"nominationCardPoster\":\"styles_nominationCardPoster__33rNN\",\"removeNominationButton\":\"styles_removeNominationButton__38dAD\",\"contentBody\":\"styles_contentBody__1em19\",\"searchResultsMainContainer\":\"styles_searchResultsMainContainer__1rqut\",\"shareLink\":\"styles_shareLink__2p2vQ\",\"middleText\":\"styles_middleText__1Pii6\",\"movieCard\":\"styles_movieCard__iqTsS\",\"movieCardPoster\":\"styles_movieCardPoster__3gDXL\",\"shareLinkContainer\":\"styles_shareLinkContainer__3QXwH\",\"modal\":\"styles_modal__3zW2H\",\"shareLinkInputDiv\":\"styles_shareLinkInputDiv__3Ibnp\",\"closeButton\":\"styles_closeButton__3BnqZ\",\"blackTitle2\":\"styles_blackTitle2__1xooA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackbar\":\"snackBar_snackbar__3IDid\",\"show\":\"snackBar_show__paIeq\",\"fadein\":\"snackBar_fadein__1dXxO\",\"fadeout\":\"snackBar_fadeout__1xqQO\",\"fadeinmobile\":\"snackBar_fadeinmobile__3Q9fZ\",\"fadeoutmobile\":\"snackBar_fadeoutmobile__2STB4\"};","export default __webpack_public_path__ + \"static/media/search.841f128c.svg\";","export default __webpack_public_path__ + \"static/media/trash.0f34c80f.svg\";","export default __webpack_public_path__ + \"static/media/share-android.53649730.svg\";","export default __webpack_public_path__ + \"static/media/copy.7dcc5ed9.svg\";","export default __webpack_public_path__ + \"static/media/x.1b162409.svg\";","import React, { PureComponent } from 'react';\r\nimport styles from './assets/snackBar.module.css'\r\n\r\nexport default class Snackbar extends PureComponent {\r\n    message = ''\r\n\r\n    state = {\r\n        isActive: false,\r\n    }\r\n\r\n    openSnackBar = (message = 'Something went wrong...') => {\r\n        this.message = message;\r\n        this.setState({ isActive: true }, () => {\r\n            setTimeout(() => {\r\n                this.setState({ isActive: false });\r\n            }, 5000);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isActive } = this.state;\r\n        return (\r\n            <div className={isActive ? styles.snackbar + \" \" + styles.show : styles.snackbar}>\r\n                {this.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport React from \"react\";\nimport axios from \"axios\";\n\nimport styles from \"./assets/styles.module.css\";\n\nimport searchIcon from \"./assets/search.svg\";\nimport trashIcon from \"./assets/trash.svg\";\nimport shareIcon from \"./assets/share-android.svg\";\nimport copyIcon from \"./assets/copy.svg\";\nimport xIcon from \"./assets/x.svg\";\n\nimport SnackBar from \"./snackBar.js\";\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      titleSearchInput:\"\",\n      searchResults:[],\n      nominationsList:[],\n      searchResultErrorMessage:\"\",\n      shareLinkIsActive:false\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.nominateMovie = this.nominateMovie.bind(this);\n    this.unNominateMovie = this.unNominateMovie.bind(this);\n    this.isNominated = this.isNominated.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n    this.clearLocalStorage = this.clearLocalStorage.bind(this);\n    this.handleShareLinkModalClick = this.handleShareLinkModalClick.bind(this);\n    this.copyLink = this.copyLink.bind(this);\n\n    this.inputRef = React.createRef();\n    this.inputDivRef = React.createRef();\n    this.snackBarRef = React.createRef();\n    this.shareLinkContainerRef = React.createRef();\n    this.shareLinkInputRef = React.createRef();\n    this.closeModalButtonRef = React.createRef();\n  }\n  componentDidMount(){\n    let queryParams = new URLSearchParams(window.location.search).get('nomi');\n    if(queryParams && queryParams.length>0){\n      let movieIdArray = queryParams.split(\"$$\");\n      let linkNominations = [];\n      let axiosRequestList = [];\n      for(let i=0;i<movieIdArray.length;i++){\n        axiosRequestList.push(axios.get(\"https://www.omdbapi.com/?apikey=\"+process.env.REACT_APP_OMDB_KEY+\"=\"+movieIdArray[i]));\n      }\n      axios.all(axiosRequestList).then(axios.spread((...responses)=>{\n        for(let j=0;j<responses.length;j++){\n          if(responses[j].data.Response === \"True\"){\n            //has a response with movie result\n            linkNominations.push(responses[j].data);\n          }\n        }\n        if(linkNominations.length>0){\n          this.setState({\n            nominationsList:linkNominations\n          });\n        }\n      }));\n    }else{\n      if (typeof(Storage) !== \"undefined\" && localStorage.movieNominations) {\n        this.setState({\n          nominationsList:JSON.parse(localStorage.movieNominations)\n        });\n      }\n    }\n\n    if(this.inputRef.current && this.inputDivRef.current){\n      this.inputRef.current.onfocus = ()=>{\n        this.inputDivRef.current.classList.add(styles.focusedDiv);\n      }\n      this.inputRef.current.onblur = ()=>{\n        this.inputDivRef.current.classList.remove(styles.focusedDiv);\n      }\n    }\n  }\n  handleInputChange(e){\n    const {name, value} = e.target;\n    if(name===\"titleSearchInput\"){\n      if(value.length>0){\n        axios.get(\"https://www.omdbapi.com/?apikey=\"+process.env.REACT_APP_OMDB_KEY+\"&s=\"+value+\"&type=movie\").then((res)=>{\n          if(res.data.Response === \"True\"){\n            //has a response with movie result\n            this.setState({\n              searchResults:res.data.Search\n            });\n          }else{\n            if(res.data.Error){\n              this.setState({\n                searchResultErrorMessage:res.data.Error\n              });\n            }\n          }\n        }).catch((err)=>{\n          this.snackBarRef.current.openSnackBar(\"There was an error with omdb's server! Please try again.\");\n        });\n      }else{\n        this.setState({\n          searchResults:[],\n          searchResultErrorMessage:\"\"\n        });\n      }\n    }\n\n    this.setState({\n      [name]:value\n    });\n  }\n\n  updateLocalStorage(){\n    if (typeof(Storage) !== \"undefined\") {\n      localStorage.setItem(\"movieNominations\", JSON.stringify(this.state.nominationsList));\n    }\n  }\n  clearLocalStorage(){\n    if (typeof(Storage) !== \"undefined\") {\n      localStorage.removeItem(\"movieNominations\");\n    }\n  }\n\n  nominateMovie(movie){\n    let id = movie.imdbID;\n    let nominations = this.state.nominationsList;\n    for(let i=0;i<nominations.length;i++){\n      if(nominations[i].imdbID === id){\n        return;\n      }\n    }\n    if(this.state.nominationsList.length<=4){\n      nominations.push(movie);\n      this.setState({\n        nominationsList:nominations\n      }, ()=>{this.updateLocalStorage()});\n    }\n  }\n  unNominateMovie(movie){\n    let id = movie.imdbID;\n    let nominations = this.state.nominationsList;\n    for(let i=0;i<nominations.length;i++){\n      if(nominations[i].imdbID === id){\n        nominations.splice(i,1);\n        this.setState({\n          nominationsList:nominations\n        }, ()=>{this.updateLocalStorage()});\n        return;\n      }\n    }\n  }\n\n  isNominated(movieId){\n    for(let i=0;i<this.state.nominationsList.length;i++){\n      if(this.state.nominationsList[i].imdbID === movieId){\n        return true;\n      }\n    }\n    return false;\n  }\n\n  handleShareLinkModalClick(e){\n    if(e.target == this.shareLinkContainerRef.current || e.target == this.closeModalButtonRef.current){\n      this.setState({\n        shareLinkIsActive:false\n      });\n    }\n  }\n\n\n  copyLink(){\n    if(this.shareLinkInputRef.current){\n      let input = this.shareLinkInputRef.current;\n      input.select();\n      input.setSelectionRange(0, 99999);\n      document.execCommand(\"copy\");\n      window.getSelection().removeAllRanges();\n      this.snackBarRef.current.openSnackBar(\"Link copied successfully!\");\n    }else{\n      this.snackBarRef.current.openSnackBar(\"Could not copy link:(\");\n    }\n  }\n\n\n  render(){\n    let searchResults;\n    if(this.state.searchResults.length>0){\n      searchResults = this.state.searchResults.map((value, key)=>{\n        return (\n          <div key={key} className={styles.movieCard}>\n            <div className={styles.movieCardPoster} style={{backgroundImage:\"url('\"+value.Poster+\"')\"}}></div>\n            <p className={styles.regularText}>{value.Title} ({value.Year})</p>\n            {this.isNominated(value.imdbID)?<button className={styles.disabledButton}>Nominate</button>:<button className={styles.button} onClick={()=>{this.nominateMovie(value)}}>Nominate</button>}\n          </div>\n        );\n      });\n    }else if(this.state.searchResultErrorMessage.length>0){\n      searchResults = <p className={styles.regularText+\" \"+styles.middleText} >{this.state.searchResultErrorMessage}</p>\n    }else{\n      searchResults = <p className={styles.regularText+\" \"+styles.middleText}>Search for a movie title in the input above.</p>\n    }\n\n\n\n    let nominationsList;\n    let shareMyList;\n    if(this.state.nominationsList.length>0){\n      shareMyList = \"https://marque2.github.io/shopify_ux_challenge?nomi=\";\n      nominationsList = this.state.nominationsList.map((value, key)=>{\n        shareMyList+=value.imdbID+\"$$\";\n        return (\n            <div key={key} style={{backgroundImage:\"url('\"+value.Poster+\"')\"}} className={styles.nominationCardPoster}>\n              <div onClick={()=>{this.unNominateMovie(value)}} className={styles.removeNominationButton}>\n                <img src={trashIcon} />\n              </div>\n              <p className={styles.regularText}>{value.Title} ({value.Year})</p>\n            </div>\n        );\n      });\n      shareMyList = shareMyList.substring(0, shareMyList.length-2);\n    }else{\n      nominationsList = <p className={styles.regularText}>Nominate up to 5 of your favorite movies.</p>\n    }\n\n\n\n    let shareLinkPopup;\n    if(this.state.shareLinkIsActive){\n      shareLinkPopup = (\n        <div ref={this.shareLinkContainerRef} onClick={this.handleShareLinkModalClick} id={styles.shareLinkContainer}>\n          <div className={styles.modal}>\n            <img ref={this.closeModalButtonRef} src={xIcon} className={styles.closeButton} />\n            <p className={styles.blackTitle2}>Share your nominations list</p>\n            <div id={styles.shareLinkInputDiv} >\n              <img src={copyIcon} onClick={this.copyLink} />\n              <input ref={this.shareLinkInputRef} type=\"text\" value={shareMyList}></input>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n      {this.state.nominationsList.length===5?<div id={styles.topBanner}><p className={styles.regularText}>Your nomination list is full! (5 movies max.)</p></div>:null}\n        <div id={styles.contentBody}>\n\n          <p className={styles.title1}>The Shoppies Awards</p>\n          <img onClick={()=>{this.setState({shareLinkIsActive:true})}} id={styles.shareIcon} src={shareIcon}/>\n          <div ref={this.inputDivRef} id={styles.inputDiv}>\n            <img src={searchIcon} />\n            <input id={styles.searchInput} ref={this.inputRef} onChange={this.handleInputChange} type=\"text\" name=\"titleSearchInput\" value={this.state.titleSearchInput} placeholder=\"movie title\"></input>\n          </div>\n\n          <div id={styles.searchResultsMainContainer}>\n            {searchResults}\n          </div>\n          <div id={styles.nominationsMainContainer}>\n            <p className={styles.title2}>Nominations</p>\n            {nominationsList}\n          </div>\n        </div>\n        {shareLinkPopup}\n        <SnackBar ref={this.snackBarRef} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}